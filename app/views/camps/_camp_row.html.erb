  <style>


  .categories-container {
    position: relative;
    overflow: hidden;
  }

  .categories-wrapper {
    display: flex;
    overflow-x: auto;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    padding: 10px 0;
  }



.camp-scroll-container {
    display: flex;
    overflow-x: auto;
    scroll-behavior: smooth;
    scrollbar-width: none;
    -ms-overflow-style: none;
    gap: 1rem;
  }

   .camp-scroll-container::-webkit-scrollbar {
    display: none;
  }




  .category-tag {
    flex: 0 0 auto;
    margin-right: 10px;
  }

  .scroll-arrow {

  }

  .scroll-left {
    left: 10px;
  }

  .scroll-right {
    right: 10px;
  }



  .camp-images {
    position: relative;
    height: 200px;
    overflow: hidden;
  }

 .image-carousel {
    position: relative;
    overflow: hidden;
    width: 100%;
    height: 200px; /* Adjust as necessary */
  }

  .image-carousel img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
  }

  .image-carousel img.active {
    opacity: 1;
  }

  .image-carousel .prev,
  .image-carousel .next {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(0,0,0,0.5);
    color: white;
    border: none;
    padding: 10px;
    cursor: pointer;
  }

  .image-carousel .prev { left: 10px; }
  .image-carousel .next { right: 10px; }

  .carousel-dots {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
  }

  .carousel-dots .dot {
    width: 10px;
    height: 10px;
    margin: 0 5px;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    cursor: pointer;
  }

  .carousel-dots .dot.active {
    background-color: rgba(255, 255, 255, 1);
  }

.category-row {
    position: relative;
    margin-bottom: 2rem;
    padding: 0 40px;
  }


  .camp-card {
    flex: 0 0 300px;
    border: none;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .camp-card:hover {
    transform: translateY(-5px);
  }

  .camp-images {
    position: relative;
    height: 200px;
  }

  .camp-images img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .camp-badge {
    position: absolute;
    top: 10px;
    left: 10px;
    background-color: #ff4081;
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: bold;
  }

  .camp-details {
    padding: 1rem;
  }

  .camp-card-link{
    text-decoration: none;
    color: inherit;
  }

  .camp-card-link:hover .camp-details {
    transition: background-color 0.3s ease;
     color: white;
    background-color: #4caf50;
  }

  .camp-rating {
    display: flex;
    align-items: center;
    font-size: 0.9rem;
    color: #ffa000;
    margin-bottom: 0.5rem;
  }

  .camp-rating i {
    margin-right: 0.25rem;
  }

  .camp-price {
    color: #ff5722;
    font-weight: bold;
    font-size: 1.2rem;
    margin-top: 0.5rem;
  }

  .view-details-btn {
    width: 100%;
    padding: 0.75rem;
    text-center;
    text-decoration: none;
    margin-top: 1rem;
    border: none;
    color: white;
    background-color: #4caf50;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s ease;
  }

  .view-details-btn:hover {
    background-color: #45a049;
    color: white;
  }

  .scroll-btn {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(255, 255, 255, 0.8);
    border: none;
    color: #333;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    font-size: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease;
  }

  .scroll-btn:hover {
    background-color: rgba(255, 255, 255, 1);
  }

  .prev-btn {
    left: 0;
  }

  .next-btn {
    right: 0;
  }

  .discover-more-btn {
    display: block;
    width: 200px;
    margin: 1rem auto 0;
   
    padding: 0.75rem;
    border: none;
    cursor: pointer;
    border-radius: 5px;
    text-align: center;
    text-decoration: none;
    transition: background-color 0.3s ease;
  }



  /* Discover More Button */
.discover-more-btn {
    background-color: #ffa500 !important;
    color: #f0f0f0;
}

.discover-more-btn:hover {
    background-color: #8a2be2 !important;
    color: #f0f0f0;
}

@media (max-width: 768px) {
  .camp-card {
    flex: 0 0 220px; /* Reduced from 300px */
  }

 .category-row {
      padding: 0 10px 0 15px;
    }
  .camp-images {
    height: 150px; /* Reduced from 200px */
  }

  .camp-details {
    padding: 0.75rem;
  }

  .camp-details h3 {
    font-size: 1rem;
    margin-bottom: 0.25rem;
  }

  .camp-rating {
    font-size: 0.8rem;
    margin-bottom: 0.25rem;
  }

  .camp-details p {
    font-size: 0.8rem;
    margin-bottom: 0.25rem;
  }

  .camp-price {
    font-size: 1rem;
    margin-top: 0.25rem;
  }

  .view-details-btn {
    padding: 0.5rem;
    font-size: 0.9rem;
    margin-top: 0.5rem;
  }

  .scroll-btn {
    width: 30px;
    height: 30px;
    font-size: 1rem;
  }

  .camp-badge {
    font-size: 0.7rem;
    padding: 0.2rem 0.4rem;
  }

  .carousel-dots .dot {
    width: 8px;
    height: 8px;
    margin: 0 3px;
  }
}

  </style>

<div class="category-row">
  <button class="scroll-btn prev-btn d-lg-block d-none" aria-label="Previous">&lt;</button>
  <button class="scroll-btn next-btn d-lg-block d-none" aria-label="Next">&gt;</button>
  
  <div class="camp-scroll-container">
  <% camps.each do |camp| %>
    <div class="camp-card">
      <div class="camp-images">
        <div class="camp-badge">Save INR <%= camp[:discount] %></div>
       <div class="image-carousel" id="carousel-<%= camp[:id] %>">
          <% camp[:media].each_with_index do |media, index| %>
            <% if media[:content_type].start_with?('image/') %>
              <img src="<%= media[:url] %>" alt="<%= camp[:name] %>" class="<%= 'active' if index == 0 %>">
            <% elsif media[:content_type].start_with?('video/') %>
              <video class="<%= 'active' if index == 0 %>" controls>
                <source src="<%= media[:url] %>" type="<%= media[:content_type] %>">
                Your browser does not support the video tag.
              </video>
            <% end %>
          <% end %>
          <% if camp[:media].present? %>
            <button class="prev">&lt;</button>
            <button class="next">&gt;</button>
          <% end %>
        </div>

        <div class="carousel-dots" id="dots-<%= camp[:id] %>">
          <% camp[:images].each_with_index do |_, index| %>
            <span class="dot <%= 'active' if index == 0 %>" data-index="<%= index %>"></span>
          <% end %>
        </div>
      </div>
      <%= link_to camp_path(camp[:id]), class: 'camp-card-link' do %>
        <div class="camp-details">
          <h3><%= camp[:name] %></h3>
          <div class="camp-rating">
            <i class="fas fa-star"></i> <%= camp[:rating] %> (<%= camp[:reviews_count] %> reviews)
          </div>
          <p><i class="fas fa-map-marker-alt"></i> <%= camp[:location] %></p>
          <p><i class="fas fa-clock"></i> <%= camp[:duration] %></p>
          <% if category != "adventure_activities" %>
            <p class="camp-price">INR <%= camp[:price] %></p>
          <% end %>
          <span class="view-details-btn">View Details</span>
        </div>
      <% end %>
    </div>
  <% end %>
</div>


  <% if camps.length > 3 %>
    <%= link_to 'Discover More', camps_category_path(category: category), class: 'discover-more-btn' %>
  <% end %>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const categoryRows = document.querySelectorAll('.category-row');

  categoryRows.forEach(row => {
    const scrollContainer = row.querySelector('.camp-scroll-container');
    const prevBtn = row.querySelector('.prev-btn');
    const nextBtn = row.querySelector('.next-btn');

    if (scrollContainer && prevBtn && nextBtn) {
      const smoothScroll = (target, duration) => {
        const start = scrollContainer.scrollLeft;
        const distance = target - start;
        let startTime = null;

        const animation = (currentTime) => {
          if (startTime === null) startTime = currentTime;
          const timeElapsed = currentTime - startTime;
          const run = easeInOutQuad(timeElapsed, start, distance, duration);
          scrollContainer.scrollLeft = run;
          if (timeElapsed < duration) requestAnimationFrame(animation);
        };

        requestAnimationFrame(animation);
      };

      const easeInOutQuad = (t, b, c, d) => {
        t /= d / 2;
        if (t < 1) return c / 2 * t * t + b;
        t--;
        return -c / 2 * (t * (t - 2) - 1) + b;
      };

      const toggleScrollButtons = () => {
        prevBtn.style.display = scrollContainer.scrollLeft > 0 ? 'flex' : 'none';
        nextBtn.style.display = 
          scrollContainer.scrollLeft < scrollContainer.scrollWidth - scrollContainer.clientWidth 
          ? 'flex' 
          : 'none';
      };

      prevBtn.addEventListener('click', () => smoothScroll(scrollContainer.scrollLeft - 300, 300));
      nextBtn.addEventListener('click', () => smoothScroll(scrollContainer.scrollLeft + 300, 300));

      scrollContainer.addEventListener('scroll', toggleScrollButtons);
      window.addEventListener('resize', toggleScrollButtons);
      toggleScrollButtons();

      // Touch events for manual scrolling
      let isScrolling = false;
      let startX;
      let scrollLeft;

      scrollContainer.addEventListener('touchstart', (e) => {
        isScrolling = true;
        startX = e.touches[0].pageX - scrollContainer.offsetLeft;
        scrollLeft = scrollContainer.scrollLeft;
      }, { passive: true });

      scrollContainer.addEventListener('touchmove', (e) => {
        if (!isScrolling) return;
        const x = e.touches[0].pageX - scrollContainer.offsetLeft;
        const walk = (x - startX) * 2;
        scrollContainer.scrollLeft = scrollLeft - walk;
      }, { passive: true });

      scrollContainer.addEventListener('touchend', () => {
        isScrolling = false;
      });
    }
  });
});

document.addEventListener('DOMContentLoaded', function() {
  const carousels = document.querySelectorAll('.image-carousel');
  
  carousels.forEach(carousel => {
    const images = carousel.querySelectorAll('img');
    const prevBtn = carousel.querySelector('.prev');
    const nextBtn = carousel.querySelector('.next');
    let currentIndex = 0;

    function showImage(index) {
      images.forEach(img => img.classList.remove('active'));
      images[index].classList.add('active');
    }
    if (prevBtn && nextBtn){

      prevBtn.addEventListener('click', () => {
        currentIndex = (currentIndex - 1 + images.length) % images.length;
        showImage(currentIndex);
      });
  
      nextBtn.addEventListener('click', () => {
        currentIndex = (currentIndex + 1) % images.length;
        showImage(currentIndex);
      });
    }
  });
});
</script>