  <style>


  .categories-container {
    position: relative;
    overflow: hidden;
  }

  .categories-wrapper {
    display: flex;
    overflow-x: auto;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    padding: 10px 0;
  }



.camp-scroll-container {
  display: flex;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
}

.camp-card {
  scroll-snap-align: start;
}

  .category-tag {
    flex: 0 0 auto;
    margin-right: 10px;
  }

  .scroll-arrow {

  }

  .scroll-left {
    left: 10px;
  }

  .scroll-right {
    right: 10px;
  }


  .camp-scroll-container {
    display: flex;
    overflow-x: auto;
    scroll-behavior: smooth;
    gap: 1rem;
    padding: 10px 0;
    margin-left: -10px; /* Compensate for the gap and padding */
    margin-right: -50px; /* Compensate for the gap and padding */
    -webkit-overflow-scrolling: touch;
    /* Add other necessary styles */
  }

  .camp-images {
    position: relative;
    height: 200px;
    overflow: hidden;
  }

  .image-carousel {
    position: relative;
    overflow: hidden;
    width: 100%;
    height: 200px; /* Adjust as necessary */
  }
  .image-carousel img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
  }

  .image-carousel img.active {
    opacity: 1;
  }

  .carousel-dots {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
  }

  .carousel-dots .dot {
    width: 10px;
    height: 10px;
    margin: 0 5px;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    cursor: pointer;
  }

  .carousel-dots .dot.active {
    background-color: rgba(255, 255, 255, 1);
  }

  .category-row {
    position: relative;
    margin-bottom: 2rem;
    padding: 0 40px;
  }

  .camp-scroll-container {
    display: flex;
    overflow-x: hidden;
    scroll-behavior: smooth;
    gap: 1rem;
  }

  .camp-card {
    flex: 0 0 300px;
    border: none;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .camp-card:hover {
    transform: translateY(-5px);
  }

  .camp-images {
    position: relative;
    height: 200px;
  }

  .camp-images img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .camp-badge {
    position: absolute;
    top: 10px;
    left: 10px;
    background-color: #ff4081;
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: bold;
  }

  .camp-details {
    padding: 1rem;
  }

  .camp-rating {
    display: flex;
    align-items: center;
    font-size: 0.9rem;
    color: #ffa000;
    margin-bottom: 0.5rem;
  }

  .camp-rating i {
    margin-right: 0.25rem;
  }

  .camp-price {
    color: #ff5722;
    font-weight: bold;
    font-size: 1.2rem;
    margin-top: 0.5rem;
  }

  .view-details-btn {
    width: 100%;
    padding: 0.75rem;
    text-center;
    text-decoration: none;
    margin-top: 1rem;
    border: none;
    color: white;
    background-color: #4caf50;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s ease;
  }

  .view-details-btn:hover {
    background-color: #45a049;
    color: white;
  }

  .scroll-btn {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(255, 255, 255, 0.8);
    border: none;
    color: #333;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    font-size: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease;
  }

  .scroll-btn:hover {
    background-color: rgba(255, 255, 255, 1);
  }

  .prev-btn {
    left: 0;
  }

  .next-btn {
    right: 0;
  }

  .discover-more-btn {
    display: block;
    width: 200px;
    margin: 1rem auto 0;
   
    padding: 0.75rem;
    border: none;
    cursor: pointer;
    border-radius: 5px;
    text-align: center;
    text-decoration: none;
    transition: background-color 0.3s ease;
  }



  /* Discover More Button */
.discover-more-btn {
    background-color: #ffa500 !important;
    color: #f0f0f0;
}

.discover-more-btn:hover {
    background-color: #8a2be2 !important;
    color: #f0f0f0;
}

@media (max-width: 768px) {
  .camp-card {
    flex: 0 0 220px; /* Reduced from 300px */
  }

  .category-row {
    margin-right: 2.9rem;
    margin-bottom: 2rem;
    padding: 0 10px 0px 15px;
  }
  .camp-images {
    height: 150px; /* Reduced from 200px */
  }

  .camp-details {
    padding: 0.75rem;
  }

  .camp-details h3 {
    font-size: 1rem;
    margin-bottom: 0.25rem;
  }

  .camp-rating {
    font-size: 0.8rem;
    margin-bottom: 0.25rem;
  }

  .camp-details p {
    font-size: 0.8rem;
    margin-bottom: 0.25rem;
  }

  .camp-price {
    font-size: 1rem;
    margin-top: 0.25rem;
  }

  .view-details-btn {
    padding: 0.5rem;
    font-size: 0.9rem;
    margin-top: 0.5rem;
  }

  .scroll-btn {
    width: 30px;
    height: 30px;
    font-size: 1rem;
  }

  .camp-badge {
    font-size: 0.7rem;
    padding: 0.2rem 0.4rem;
  }

  .carousel-dots .dot {
    width: 8px;
    height: 8px;
    margin: 0 3px;
  }
}

  </style>

  <div class="category-row">
    <button class="scroll-btn prev-btn d-lg-block d-none" style="z-index: 900;" aria-label="Previous">&lt;</button>
    <button class="scroll-btn next-btn d-lg-block d-none" style="z-index: 900;" aria-label="Next">&gt;</button>
    
    <div class="camp-scroll-container">
    <% camps.each do |camp| %>
      <div class="camp-card">
        <div class="camp-images">
          <div style="z-index: 900;" class="camp-badge">Save INR <%= camp[:discount] %></div>
          <div class="image-carousel" id="carousel-<%= camp[:id] %>">
            <% camp[:images].each_with_index do |image, index| %>
              <img src="<%= image[:url] %>" alt="<%= camp[:name] %>" class="<%= 'active' if index == 0 %>">
            <% end %>
          </div>
          <div class="carousel-dots" id="dots-<%= camp[:id] %>">
            <% camp[:images].each_with_index do |_, index| %>
              <span class="dot <%= 'active' if index == 0 %>" data-index="<%= index %>"></span>
            <% end %>
          </div>
        </div>
        <div class="camp-details">
          <h3><%= camp[:name] %></h3>
          <div class="camp-rating">
            <i class="fas fa-star"></i> <%= camp[:rating] %> (<%= camp[:reviews_count] %> reviews)
          </div>
          <p><i class="fas fa-map-marker-alt"></i> <%= camp[:location] %></p>
          <p><i class="fas fa-clock"></i> <%= camp[:duration] %></p>

          <% if category == "adventure_activities" %>
           
          <% else %>
            <p class="camp-price">INR <%= camp[:price] %></p>
          <% end %>
          <span class="w-100 d-flex text-center">
            <%= link_to 'View Details', camp_path(camp[:id]), class: 'view-details-btn' %>
          </span>
        </div>
      </div>
    <% end %>
  </div>


    <% if camps.length > 3 %>
      <%= link_to 'Discover More', camps_category_path(category: category), class: 'discover-more-btn' %>
    <% end %>
  </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/smooth-scroll/16.1.3/smooth-scroll.min.js"></script>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
    const categoryRows = document.querySelectorAll('.category-row');

    categoryRows.forEach(row => {
        const scrollContainer = row.querySelector('.camp-scroll-container');
        const prevBtn = row.querySelector('.prev-btn');
        const nextBtn = row.querySelector('.next-btn');

        if (scrollContainer && prevBtn && nextBtn) {
            function smoothScroll(target, duration) {
                const start = scrollContainer.scrollLeft;
                const distance = target - start;
                let startTime = null;

                function animation(currentTime) {
                    if (startTime === null) startTime = currentTime;
                    const timeElapsed = currentTime - startTime;
                    const run = ease(timeElapsed, start, distance, duration);
                    scrollContainer.scrollLeft = run;
                    if (timeElapsed < duration) requestAnimationFrame(animation);
                }

                function ease(t, b, c, d) {
                    return c * (-Math.pow(2, -10 * t/d) + 1) + b;
                }

                requestAnimationFrame(animation);
            }

            function toggleScrollButtons() {
                prevBtn.style.display = scrollContainer.scrollLeft > 0 ? 'flex' : 'none';
                nextBtn.style.display = 
                    scrollContainer.scrollLeft < scrollContainer.scrollWidth - scrollContainer.clientWidth 
                    ? 'flex' 
                    : 'none';
            }

            prevBtn.addEventListener('click', () => {
                smoothScroll(scrollContainer.scrollLeft - 300, 200);
            });

            nextBtn.addEventListener('click', () => {
                smoothScroll(scrollContainer.scrollLeft + 300, 200);
            });

            scrollContainer.addEventListener('scroll', toggleScrollButtons);
            window.addEventListener('resize', toggleScrollButtons);
            toggleScrollButtons();

            // Touch events for manual scrolling
            let isScrolling = false;
            let startX;
            let scrollLeft;

            scrollContainer.addEventListener('touchstart', (e) => {
                isScrolling = true;
                startX = e.touches[0].pageX - scrollContainer.offsetLeft;
                scrollLeft = scrollContainer.scrollLeft;
            }, { passive: true });

            scrollContainer.addEventListener('touchmove', (e) => {
                if (!isScrolling) return;
                e.preventDefault();
                const x = e.touches[0].pageX - scrollContainer.offsetLeft;
                const walk = (x - startX) * 2;
                scrollContainer.scrollLeft = scrollLeft - walk;
            }, { passive: false });

            scrollContainer.addEventListener('touchend', () => {
                isScrolling = false;
            });
        }
    });
});
    </script>